package com.project309.flashtriviachallenge;

import java.io.IOException;
import java.io.InputStream;
import java.util.Random;
import java.lang.Thread;
import android.os.Bundle;
import android.os.Message;
import android.os.CountDownTimer;
import android.app.Activity;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.view.Menu;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.TextView;
import network.QuestionsParser;
import network.Request;

public class Gaming extends Activity {
	static String response = null;
	static String question = null;
	static String ans1 = null;
	static String ans2 = null;
	static String ans3 = null ;
	static String ans4 = null;
	static int correct = 0;
<<<<<<< .mine
	//int i=1;
	//QuestionsParser ques = new QuestionsParser();
	Request request = new Request();
=======
	static int i=1;
>>>>>>> .r129
	protected TextView Time;
	protected CountDownTimer timer;
  
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.activity_gaming, menu);
  	  	setTextViewColor();
        return true;
    } 
      
     
    public class MyCount extends CountDownTimer
    {
    	public MyCount(long millisInFuture, long countDownInterval)
    	{
    		super(millisInFuture, countDownInterval);
    	}
    	
    	@Override
    	public void onFinish()
    	{
    		Time.setText("Time's up!");
    	}
    	
    	@Override
    	public void onTick(long millisUntilFinished)
    	{
    		Time.setText("Left: "+millisUntilFinished/1000);
    	}
    }
    
    
     protected void onCreate(Bundle icicle) { 
    	this.requestWindowFeature(Window.FEATURE_NO_TITLE);
    	super.onCreate(icicle); 
        setContentView(R.layout.activity_gaming); 
        Time = (TextView)findViewById(R.id.time);
        final Button button = (Button) findViewById(R.id.button1);
        final MyCount counter = new MyCount(31000,1000);
        final TextView questionNum = (TextView) findViewById(R.id.textView1);
        final QuestionsParser  qparse = new QuestionsParser((TextView) findViewById(R.id.textView2),
													  (TextView) findViewById(R.id.radio0),
													  (TextView) findViewById(R.id.radio2),
													  (TextView) findViewById(R.id.radio1),
													  (TextView) findViewById(R.id.RadioButton01));
		
        questionNum.setText("Question: " + i); 
        qparse.execute(("GET /questions/" + i + ".xml"));
  	  	counter.start();
  	  	
        button.setOnClickListener(
 			new View.OnClickListener() { 		
	            public void onClick(View v) { 
	              ++i;
	              if (i < 11){
	            	  Intent intent = new Intent(getApplicationContext(), Gaming.class);
	                  startActivity(intent);
	                  finish();
	            	  //setTextViewColor();
	
	              } else {	  
	            	  i = 1;
	            	  Intent intent = new Intent(getApplicationContext(), ScoreScreen.class);
	                  startActivity(intent);
	                  finish();
	              }
	            } 
	        });  
     }
    
    public void setTextViewColor()
	{
		Time.setTextColor(Color.RED);
	}
    
    @Override
	public void onBackPressed() {
	
	}
    /*
    private int generateID(){
		Random generator = new Random();
		return (generator.nextInt() % 3) + 1;
	}
	*/
}
